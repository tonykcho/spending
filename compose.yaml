services:
  api:
    build: ./spending-api
    container_name: spending_api_container
    ports:
      - 8001
    environment:
      - BASIC_AUTH_USER=admin
      - BASIC_AUTH_PASSWORD=password
    volumes:
      - ./spending-api/logs:/app/logs
    depends_on:
      - postgres
      - jaeger
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=PathPrefix(`/`)"
      - "traefik.http.routers.api.entrypoints=api" # Use the api entrypoint
      - "traefik.http.services.api.loadbalancer.server.port=8001"
      # - "traefik.http.routers.api.rule=Host(`traefik.api.localhost`)"
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pwd
      POSTGRES_DB: spending
    ports:
      - 5432
    # volumes:
    #   - postgres_data:/var/lib/postgresql/data

  jaeger:
    image: jaegertracing/all-in-one
    ports:
      - 4317
      - 4318
      - 16686
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jaeger.rule=PathPrefix(`/`)"
      - "traefik.http.routers.jaeger.entrypoints=jaeger" # Use the jaeger entrypoint
      - "traefik.http.services.jaeger.loadbalancer.server.port=16686"

  prometheus:
    image: prom/prometheus
    container_name: prometheus_container
    ports:
      - 9090 # expose prometheus on port 9090 for local access for development
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=PathPrefix(`/`)"
      - "traefik.http.routers.prometheus.entrypoints=prometheus" # Use the prometheus entrypoint
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      # - "traefik.http.routers.prometheus.rule=Host(`traefik.prometheus.localhost`)"

  loki:
    image: grafana/loki
    container_name: loki_container
    ports:
      - 3100
    command: -config.file=/etc/loki/local-config.yaml

  promtail:
    image: grafana/promtail
    command: -config.file=/etc/promtail/docker-config.yaml
    volumes:
      - ./spending-api/logs:/logs
      - ./promtail.yaml:/etc/promtail/docker-config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on: [loki]

  grafana:
    image: grafana/grafana
    container_name: grafana_container
    ports:
      - 3000
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=PathPrefix(`/`)"
      - "traefik.http.routers.grafana.entrypoints=grafana" # Use the grafana entrypoint
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      # - "traefik.http.routers.grafana.rule=Host(`traefik.grafana.localhost`)"

  traefik:
    image: traefik
    container_name: traefik_container
    command:
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--providers.docker"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.grafana.address=:3000" # grafana entrypoint
      - "--entrypoints.api.address=:8001" # api entrypoint
      - "--entrypoints.prometheus.address=:9090" # prometheus entrypoint
      - "--entrypoints.jaeger.address=:16686" # jaeger entrypoint
      - "--log.level=DEBUG"
      - "--accesslog=true"
      - "--accesslog.filepath=/var/log/access.log"
    ports:
      - 80:80
      - 443:443
      - 3000:3000
      - 8001:8001
      - 8080:8080
      - 9090:9090
      - 16686:16686
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "./traefik-logs:/var/log" # Mount a directory for log files
    # labels:
    #   - "traefik.enable=true"
    #   - "traefik.http.routers.traefik.rule=PathPrefix(`/`)"
    #   - "traefik.http.services.traefik.loadbalancer.server.port=8080"
    #   - "traefik.http.routers.traefik.entrypoints=custom" # Use the custom entrypoint

volumes:
  postgres_data:
