services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pwd
      POSTGRES_DB: spending
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  jaeger:
    image: jaegertracing/all-in-one
    ports:
      - 4317:4317 # expose jaeger on port 4317 for local access for development
      - 4318:4318 # expose jaeger on port 4318 for local access for development
      - 16686:16686 # expose jaeger on port 16686 for local access for development
      # labels:
      # - "traefik.enable=true"
      # - "traefik.http.routers.jaeger.rule=PathPrefix(`/`)"
      # - "traefik.http.routers.jaeger.entrypoints=jaeger" # Use the jaeger entrypoint
      # - "traefik.http.services.jaeger.loadbalancer.server.port=16686"
      # - "traefik.http.routers.jaeger.rule=Host(`traefik.jaeger.localhost`)"

  prometheus:
    image: prom/prometheus
    container_name: prometheus_container
    ports:
      - 9090:9090 # expose prometheus on port 9090 for local access for development
    volumes:
      - ./prometheus.dev.yml:/etc/prometheus/prometheus.yml
    # labels:
    #   - "traefik.enable=true"
    #   - "traefik.http.routers.prometheus.rule=PathPrefix(`/`)"
    #   - "traefik.http.routers.prometheus.entrypoints=prometheus" # Use the prometheus entrypoint
    #   - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      # - "traefik.http.routers.prometheus.rule=Host(`traefik.prometheus.localhost`)"

  loki:
    image: grafana/loki
    container_name: loki_container
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml

  promtail:
    image: grafana/promtail
    command: -config.file=/etc/promtail/docker-config.yaml
    volumes:
      - ./spending-api/logs:/logs
      - ./promtail.dev.yaml:/etc/promtail/docker-config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on: [loki]

  grafana:
    image: grafana/grafana
    container_name: grafana_container
    ports:
      - 3000:3000
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    # labels:
    #   - "traefik.enable=true"
    #   - "traefik.http.routers.grafana.rule=PathPrefix(`/`)"
    #   - "traefik.http.routers.grafana.entrypoints=grafana" # Use the grafana entrypoint
    #   - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      # - "traefik.http.routers.grafana.rule=Host(`traefik.grafana.localhost`)"

volumes:
  postgres_data:
